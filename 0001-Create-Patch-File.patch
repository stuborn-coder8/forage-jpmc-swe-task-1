From 72cc0653f4e135ba9906497f8b24fd1fc61a6713 Mon Sep 17 00:00:00 2001
From: Nikhil Verma <nvverma1998@gmail.com>
Date: Thu, 3 Aug 2023 11:29:21 +0530
Subject: [PATCH] Create Patch File

---
 client3.py     | 45 ++++++++++++++-------------------------------
 client_test.py | 16 +++++++++++++++-
 2 files changed, 29 insertions(+), 32 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..79bd6a3 100644
--- a/client3.py
+++ b/client3.py
@@ -1,23 +1,3 @@
-################################################################################
-#
-#  Permission is hereby granted, free of charge, to any person obtaining a
-#  copy of this software and associated documentation files (the "Software"),
-#  to deal in the Software without restriction, including without limitation
-#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
-#  and/or sell copies of the Software, and to permit persons to whom the
-#  Software is furnished to do so, subject to the following conditions:
-#
-#  The above copyright notice and this permission notice shall be included in
-#  all copies or substantial portions of the Software.
-#
-#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-#  DEALINGS IN THE SOFTWARE.
-
 import json
 import random
 import urllib.request
@@ -28,21 +8,23 @@ QUERY = "http://localhost:8080/query?id={}"
 # 500 server request
 N = 500
 
+# Initialize the dictionary to store prices
+prices = {'ABC': 0, 'DEF': 0}
 
 def getDataPoint(quote):
-    """ Produce all the needed values to generate a datapoint """
-    """ ------------- Update this function ------------- """
+    """Produce all the needed values to generate a datapoint"""
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
-    return stock, bid_price, ask_price, price
+    avg_price = (bid_price + ask_price) / 2  # Calculate the average price
+    return stock, bid_price, ask_price, avg_price
 
 
 def getRatio(price_a, price_b):
-    """ Get ratio of price_a and price_b """
-    """ ------------- Update this function ------------- """
-    return 1
+    """Calculate the ratio between two prices"""
+    if price_b == 0:
+        return  # Avoid ZeroDivisionError by not dividing by zero
+    return price_a / price_b
 
 
 # Main
@@ -51,9 +33,10 @@ if __name__ == "__main__":
     for _ in iter(range(N)):
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
-        """ ----------- Update to get the ratio --------------- """
         for quote in quotes:
-            stock, bid_price, ask_price, price = getDataPoint(quote)
-            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+            stock, bid_price, ask_price, avg_price = getDataPoint(quote)
+            prices[stock] = avg_price  # Store the average price in the 'prices' dictionary
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, avg_price))
 
-        print("Ratio %s" % getRatio(price, price))
+        ratio = getRatio(prices['ABC'], prices['DEF'])
+        print("Ratio %s" % ratio)
diff --git a/client_test.py b/client_test.py
index af2bf26..a814dcb 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,16 +8,30 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for i in qoutes:
+      self.assertEqual(getDataPoint(i),(i['stock'],i['ask_price'],(i['stock'] + i['ask_price'])/2))
+        
+    
+  
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
-    """ ------------ Add the assertion below ------------ """
+    for i in qoutes:
+      self.assertEqual(getDataPoint(i),(i['stock'],i['ask_price'],(i['stock'] + i['ask_price'])/2))
+      
+      
+        
+  
+  
+  
+
 
 
   """ ------------ Add more unit tests ------------ """
+  
 
 
 
-- 
2.39.1.windows.1

